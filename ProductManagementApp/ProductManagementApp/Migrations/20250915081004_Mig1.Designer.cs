// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProductManagementApp.Data;

#nullable disable

namespace ProductManagementApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250915081004_Mig1")]
    partial class Mig1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProductManagementApp.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<byte[]>("MainImageData")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("MainImageFileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Brand = "AlphaTech",
                            Description = "A smart and stylish watch from AlphaTech.",
                            Discount = 5m,
                            Name = "Alpha Watch",
                            Price = 199.99m
                        },
                        new
                        {
                            ProductId = 2,
                            Brand = "AlphaTech",
                            Description = "A high-performance mobile device by AlphaTech.",
                            Discount = 10m,
                            Name = "Alpha Mobile",
                            Price = 499.99m
                        },
                        new
                        {
                            ProductId = 3,
                            Brand = "AlphaTech",
                            Description = "A lightweight and powerful laptop from AlphaTech.",
                            Discount = 15m,
                            Name = "Alpha Laptop",
                            Price = 999.99m
                        },
                        new
                        {
                            ProductId = 4,
                            Brand = "BetaWorks",
                            Description = "An elegant watch featuring modern functionalities by BetaWorks.",
                            Discount = 5m,
                            Name = "Beta Watch",
                            Price = 149.99m
                        },
                        new
                        {
                            ProductId = 5,
                            Brand = "BetaWorks",
                            Description = "An advanced mobile device with cutting-edge technology from BetaWorks.",
                            Discount = 10m,
                            Name = "Beta Mobile",
                            Price = 599.99m
                        },
                        new
                        {
                            ProductId = 6,
                            Brand = "BetaWorks",
                            Description = "A powerful laptop built for both gaming and professional use by BetaWorks.",
                            Discount = 20m,
                            Name = "Beta Laptop",
                            Price = 1099.99m
                        },
                        new
                        {
                            ProductId = 7,
                            Brand = "GammaCorp",
                            Description = "A sporty watch with fitness tracking features from GammaCorp.",
                            Discount = 5m,
                            Name = "Gamma Watch",
                            Price = 129.99m
                        },
                        new
                        {
                            ProductId = 8,
                            Brand = "GammaCorp",
                            Description = "A compact mobile device with excellent battery life by GammaCorp.",
                            Discount = 5m,
                            Name = "Gamma Mobile",
                            Price = 399.99m
                        },
                        new
                        {
                            ProductId = 9,
                            Brand = "GammaCorp",
                            Description = "A versatile laptop with long-lasting battery performance from GammaCorp.",
                            Discount = 10m,
                            Name = "Gamma Laptop",
                            Price = 899.99m
                        });
                });

            modelBuilder.Entity("ProductManagementApp.Models.ProductImage", b =>
                {
                    b.Property<int>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImageId"));

                    b.Property<byte[]>("ImageData")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ImageFileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("ImageId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductImages");
                });

            modelBuilder.Entity("ProductManagementApp.Models.ProductImage", b =>
                {
                    b.HasOne("ProductManagementApp.Models.Product", "Product")
                        .WithMany("RelatedImages")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ProductManagementApp.Models.Product", b =>
                {
                    b.Navigation("RelatedImages");
                });
#pragma warning restore 612, 618
        }
    }
}
